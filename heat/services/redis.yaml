heat_template_version: 2015-04-30

description: stack describing redis service

parameters:
  default_image:
    type: string
    label: Redis Base Image
    description: the base image for redis servers
    constraints:
      - description: is a valid image
        custom_constraint: glance.image

  default_key:
    type: string
    label: Nova Keypair
    description: keypair for bootstrap
    constraints:
      - description: is a valid keypair
        custom_constraint: nova.keypair

  network:
    type: string
    label: Network to put servers in
    description: network to put server in
    constraints:
      - description: is a valid network
        custom_constraint: neutron.network

resources:
  flavor:
    type: OS::Nova::Flavor
    properties:
      ram: 512
      vcpus: 1
      disk: 10

  security_group:
    type: OS::Neutron::SecurityGroup
    properties:
      name: redis
      description: redis security group
      rules:
        - direction: ingress
          port_range_min: 22
          port_range_max: 22
          protocol: tcp
          remote_ip_prefix: 0.0.0.0/0
        - direction: egress
          remote_ip_prefix: 0.0.0.0/0

  server_group:
    type: OS::Nova::ServerGroup
    properties:
      name: redis

  vip:
    type: OS::Neutron::Port
    properties:
      network: { get_param: network }

  redis_1_port:
    type: OS::Neutron::Port
    properties:
      network: { get_param: network }
      allowed_address_pairs:
        - ip_address: { get_attr: [vip, fixed_ips, 0, ip_address] }
      security_groups:
        - { get_resource: security_group }

  redis_1:
    type: OS::Nova::Server
    properties:
      name: redis01
      image: { get_param: default_image }
      flavor: { get_resource: flavor }
      key_name: { get_param: default_key }
      networks:
        - port: { get_resource: redis_1_port }
      scheduler_hints:
        group: { get_resource: server_group }

  redis_2_port:
    type: OS::Neutron::Port
    properties:
      network: { get_param: network }
      allowed_address_pairs:
        - ip_address: { get_attr: [vip, fixed_ips, 0, ip_address] }
      security_groups:
        - { get_resource: security_group }

  redis_2:
    type: OS::Nova::Server
    properties:
      name: redis02
      image: { get_param: default_image }
      flavor: { get_resource: flavor }
      key_name: { get_param: default_key }
      networks:
        - port: { get_resource: redis_2_port }
      scheduler_hints:
        group: { get_resource: server_group }

outputs:
  flavor:
    description: redis flavor
    value: { get_resource: flavor }

  security_group:
    description: redis security group
    value: { get_resource: security_group }

  server_group:
    description: redis server group
    value: { get_resource: server_group }

  servers:
    description: redis servers
    value: { get_resource: servers }
